{"version":3,"sources":["jquery.placeholder.js","jquery.cookie.js","jquery.query.js"],"names":[],"mappingsfile":"vendor.js","sourcesContent":["/*! http://mths.be/placeholder v2.0.7 by @mathias */\n;(function(window, document, $) {\n\n\tvar isInputSupported = 'placeholder' in document.createElement('input'),\n\t    isTextareaSupported = 'placeholder' in document.createElement('textarea'),\n\t    prototype = $.fn,\n\t    valHooks = $.valHooks,\n\t    hooks,\n\t    placeholder;\n\n\tif (isInputSupported && isTextareaSupported) {\n\n\t\tplaceholder = prototype.placeholder = function() {\n\t\t\treturn this;\n\t\t};\n\n\t\tplaceholder.input = placeholder.textarea = true;\n\n\t} else {\n\n\t\tplaceholder = prototype.placeholder = function() {\n\t\t\tvar $this = this;\n\t\t\t$this\n\t\t\t\t.filter((isInputSupported ? 'textarea' : ':input') + '[placeholder]')\n\t\t\t\t.not('.placeholder')\n\t\t\t\t.bind({\n\t\t\t\t\t'focus.placeholder': clearPlaceholder,\n\t\t\t\t\t'blur.placeholder': setPlaceholder\n\t\t\t\t})\n\t\t\t\t.data('placeholder-enabled', true)\n\t\t\t\t.trigger('blur.placeholder');\n\t\t\treturn $this;\n\t\t};\n\n\t\tplaceholder.input = isInputSupported;\n\t\tplaceholder.textarea = isTextareaSupported;\n\n\t\thooks = {\n\t\t\t'get': function(element) {\n\t\t\t\tvar $element = $(element);\n\t\t\t\treturn $element.data('placeholder-enabled') && $element.hasClass('placeholder') ? '' : element.value;\n\t\t\t},\n\t\t\t'set': function(element, value) {\n\t\t\t\tvar $element = $(element);\n\t\t\t\tif (!$element.data('placeholder-enabled')) {\n\t\t\t\t\treturn element.value = value;\n\t\t\t\t}\n\t\t\t\tif (value == '') {\n\t\t\t\t\telement.value = value;\n\t\t\t\t\t// Issue #56: Setting the placeholder causes problems if the element continues to have focus.\n\t\t\t\t\tif (element != document.activeElement) {\n\t\t\t\t\t\t// We can't use `triggerHandler` here because of dummy text/password inputs :(\n\t\t\t\t\t\tsetPlaceholder.call(element);\n\t\t\t\t\t}\n\t\t\t\t} else if ($element.hasClass('placeholder')) {\n\t\t\t\t\tclearPlaceholder.call(element, true, value) || (element.value = value);\n\t\t\t\t} else {\n\t\t\t\t\telement.value = value;\n\t\t\t\t}\n\t\t\t\t// `set` can not return `undefined`; see http://jsapi.info/jquery/1.7.1/val#L2363\n\t\t\t\treturn $element;\n\t\t\t}\n\t\t};\n\n\t\tisInputSupported || (valHooks.input = hooks);\n\t\tisTextareaSupported || (valHooks.textarea = hooks);\n\n\t\t$(function() {\n\t\t\t// Look for forms\n\t\t\t$(document).delegate('form', 'submit.placeholder', function() {\n\t\t\t\t// Clear the placeholder values so they don't get submitted\n\t\t\t\tvar $inputs = $('.placeholder', this).each(clearPlaceholder);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t$inputs.each(setPlaceholder);\n\t\t\t\t}, 10);\n\t\t\t});\n\t\t});\n\n\t\t// Clear placeholder values upon page reload\n\t\t$(window).bind('beforeunload.placeholder', function() {\n\t\t\t$('.placeholder').each(function() {\n\t\t\t\tthis.value = '';\n\t\t\t});\n\t\t});\n\n\t}\n\n\tfunction args(elem) {\n\t\t// Return an object of element attributes\n\t\tvar newAttrs = {},\n\t\t    rinlinejQuery = /^jQuery\\d+$/;\n\t\t$.each(elem.attributes, function(i, attr) {\n\t\t\tif (attr.specified && !rinlinejQuery.test(attr.name)) {\n\t\t\t\tnewAttrs[attr.name] = attr.value;\n\t\t\t}\n\t\t});\n\t\treturn newAttrs;\n\t}\n\n\tfunction clearPlaceholder(event, value) {\n\t\tvar input = this,\n\t\t    $input = $(input);\n\t\tif (input.value == $input.attr('placeholder') && $input.hasClass('placeholder')) {\n\t\t\tif ($input.data('placeholder-password')) {\n\t\t\t\t$input = $input.hide().next().show().attr('id', $input.removeAttr('id').data('placeholder-id'));\n\t\t\t\t// If `clearPlaceholder` was called from `$.valHooks.input.set`\n\t\t\t\tif (event === true) {\n\t\t\t\t\treturn $input[0].value = value;\n\t\t\t\t}\n\t\t\t\t$input.focus();\n\t\t\t} else {\n\t\t\t\tinput.value = '';\n\t\t\t\t$input.removeClass('placeholder');\n\t\t\t\tinput == document.activeElement && input.select();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setPlaceholder() {\n\t\tvar $replacement,\n\t\t    input = this,\n\t\t    $input = $(input),\n\t\t    $origInput = $input,\n\t\t    id = this.id;\n\t\tif (input.value == '') {\n\t\t\tif (input.type == 'password') {\n\t\t\t\tif (!$input.data('placeholder-textinput')) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t$replacement = $input.clone().attr({ 'type': 'text' });\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t$replacement = $('<input>').attr($.extend(args(this), { 'type': 'text' }));\n\t\t\t\t\t}\n\t\t\t\t\t$replacement\n\t\t\t\t\t\t.removeAttr('name')\n\t\t\t\t\t\t.data({\n\t\t\t\t\t\t\t'placeholder-password': true,\n\t\t\t\t\t\t\t'placeholder-id': id\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.bind('focus.placeholder', clearPlaceholder);\n\t\t\t\t\t$input\n\t\t\t\t\t\t.data({\n\t\t\t\t\t\t\t'placeholder-textinput': $replacement,\n\t\t\t\t\t\t\t'placeholder-id': id\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.before($replacement);\n\t\t\t\t}\n\t\t\t\t$input = $input.removeAttr('id').hide().prev().attr('id', id).show();\n\t\t\t\t// Note: `$input[0] != input` now!\n\t\t\t}\n\t\t\t$input.addClass('placeholder');\n\t\t\t$input[0].value = $input.attr('placeholder');\n\t\t} else {\n\t\t\t$input.removeClass('placeholder');\n\t\t}\n\t}\n\n}(this, document, jQuery));","/**\n * jQuery Cookie plugin\n *\n * Copyright (c) 2010 Klaus Hartl (stilbuero.de)\n * Dual licensed under the MIT and GPL licenses:\n * http://www.opensource.org/licenses/mit-license.php\n * http://www.gnu.org/licenses/gpl.html\n *\n */\n(function($) {\n    $.cookie = function(key, value, options) {\n\n        // key and at least value given, set cookie...\n        if (arguments.length > 1 && (!/Object/.test(Object.prototype.toString.call(value)) || value === null || value === undefined)) {\n            options = $.extend({}, options);\n\n            if (value === null || value === undefined) {\n                options.expires = -1;\n            }\n\n            if (typeof options.expires === 'number') {\n                var days = options.expires, t = options.expires = new Date();\n                t.setDate(t.getDate() + days);\n            }\n\n            value = String(value);\n\n            return (document.cookie = [\n                encodeURIComponent(key), '=', options.raw ? value : encodeURIComponent(value),\n                options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE\n                options.path    ? '; path=' + options.path : '',\n                options.domain  ? '; domain=' + options.domain : '',\n                options.secure  ? '; secure' : ''\n            ].join(''));\n        }\n\n        // key and possibly options given, get cookie...\n        options = value || {};\n        var decode = options.raw ? function(s) { return s; } : decodeURIComponent;\n\n        var pairs = document.cookie.split('; ');\n        for (var i = 0, pair; pair = pairs[i] && pairs[i].split('='); i++) {\n            if (decode(pair[0]) === key) return decode(pair[1] || ''); // IE saves cookies with empty string as \"c; \", e.g. without \"=\" as opposed to EOMB, thus pair[1] may be undefined\n        }\n        return null;\n    };\n})(jQuery);","/**\n * http://plugins.jquery.com/project/query-object\n * jQuery.query - Query String Modification and Creation for jQuery\n * Written by Blair Mitchelmore (blair DOT mitchelmore AT gmail DOT com)\n * Licensed under the WTFPL (http://sam.zoy.org/wtfpl/).\n * Date: 2009/8/13\n *\n * @author Blair Mitchelmore\n * @version 2.1.7\n *\n **/\nnew function(settings) {\n    // Various Settings\n    var $separator = settings.separator || '&';\n    var $spaces = settings.spaces === false ? false : true;\n    var $suffix = settings.suffix === false ? '' : '[]';\n    var $prefix = settings.prefix === false ? false : true;\n    var $hash = $prefix ? settings.hash === true ? \"#\" : \"?\" : \"\";\n    var $numbers = settings.numbers === false ? false : true;\n  \n    jQuery.query = new function() {\n        var is = function(o, t) {\n            return o != undefined && o !== null && (!!t ? o.constructor == t : true);\n        };\n        var parse = function(path) {\n            var m, rx = /\\[([^[]*)\\]/g, match = /^([^[]+)(\\[.*\\])?$/.exec(path), base = match[1], tokens = [];\n            while (m = rx.exec(match[2])) tokens.push(m[1]);\n            return [base, tokens];\n        };\n        var set = function(target, tokens, value) {\n            var o, token = tokens.shift();\n            if (typeof target != 'object') target = null;\n            if (token === \"\") {\n                if (!target) target = [];\n                if (is(target, Array)) {\n                    target.push(tokens.length == 0 ? value : set(null, tokens.slice(0), value));\n                } else if (is(target, Object)) {\n                    var i = 0;\n                    while (target[i++] != null);\n                    target[--i] = tokens.length == 0 ? value : set(target[i], tokens.slice(0), value);\n                } else {\n                    target = [];\n                    target.push(tokens.length == 0 ? value : set(null, tokens.slice(0), value));\n                }\n            } else if (token && token.match(/^\\s*[0-9]+\\s*$/)) {\n                var index = parseInt(token, 10);\n                if (!target) target = [];\n                target[index] = tokens.length == 0 ? value : set(target[index], tokens.slice(0), value);\n            } else if (token) {\n                var index = token.replace(/^\\s*|\\s*$/g, \"\");\n                if (!target) target = {};\n                if (is(target, Array)) {\n                    var temp = {};\n                    for (var i = 0; i < target.length; ++i) {\n                        temp[i] = target[i];\n                    }\n                    target = temp;\n                }\n                target[index] = tokens.length == 0 ? value : set(target[index], tokens.slice(0), value);\n            } else {\n                return value;\n            }\n        return target;\n    };\n    \n    var queryObject = function(a) {\n        var self = this;\n        self.keys = {};\n      \n        if (a.queryObject) {\n            jQuery.each(a.get(), function(key, val) {\n                self.SET(key, val);\n            });\n        } else {\n            jQuery.each(arguments, function() {\n                var q = \"\" + this;\n                q = q.replace(/^[?#]/,''); // remove any leading ? || #\n                q = q.replace(/[;&]$/,''); // remove any trailing & || ;\n                if ($spaces) q = q.replace(/[+]/g,' '); // replace +'s with spaces\n          \n                jQuery.each(q.split(/[&;]/), function(){\n                    var key = decodeURIComponent(this.split('=')[0] || \"\");\n                    var val = decodeURIComponent(this.split('=')[1] || \"\");\n                \n                    if (!key) return;\n            \n                    if ($numbers) {\n                        if (/^[+-]?[0-9]+\\.[0-9]*$/.test(val)) // simple float regex\n                            val = parseFloat(val);\n                        else if (/^[+-]?[0-9]+$/.test(val)) // simple int regex\n                            val = parseInt(val, 10);\n                    }\n            \n                    val = (!val && val !== 0) ? true : val;\n            \n                    if (val !== false && val !== true && typeof val != 'number')\n                        val = val;\n            \n                    self.SET(key, val);\n                });\n            });\n        }\n        return self;\n    };\n    \n    queryObject.prototype = {\n        queryObject: true,\n        has: function(key, type) {\n            var value = this.get(key);\n            return is(value, type);\n        },\n        GET: function(key) {\n            if (!is(key)) return this.keys;\n            var parsed = parse(key), base = parsed[0], tokens = parsed[1];\n            var target = this.keys[base];\n            while (target != null && tokens.length != 0) {\n                target = target[tokens.shift()];\n            }\n            return typeof target == 'number' ? target : target || \"\";\n        },\n        get: function(key) {\n            var target = this.GET(key);\n            if (is(target, Object))\n                return jQuery.extend(true, {}, target);\n            else if (is(target, Array))\n                return target.slice(0);\n            return target;\n      },\n      SET: function(key, val) {\n        var value = !is(val) ? null : val;\n        var parsed = parse(key), base = parsed[0], tokens = parsed[1];\n        var target = this.keys[base];\n        this.keys[base] = set(target, tokens.slice(0), value);\n        return this;\n      },\n      set: function(key, val) {\n        return this.copy().SET(key, val);\n      },\n      REMOVE: function(key) {\n        return this.SET(key, null).COMPACT();\n      },\n      remove: function(key) {\n        return this.copy().REMOVE(key);\n      },\n      EMPTY: function() {\n        var self = this;\n        jQuery.each(self.keys, function(key, value) {\n          delete self.keys[key];\n        });\n        return self;\n      },\n      load: function(url) {\n        var hash = url.replace(/^.*?[#](.+?)(?:\\?.+)?$/, \"$1\");\n        var search = url.replace(/^.*?[?](.+?)(?:#.+)?$/, \"$1\");\n        return new queryObject(url.length == search.length ? '' : search, url.length == hash.length ? '' : hash);\n      },\n      empty: function() {\n        return this.copy().EMPTY();\n      },\n      copy: function() {\n        return new queryObject(this);\n      },\n      COMPACT: function() {\n        function build(orig) {\n          var obj = typeof orig == \"object\" ? is(orig, Array) ? [] : {} : orig;\n          if (typeof orig == 'object') {\n            function add(o, key, value) {\n              if (is(o, Array))\n                o.push(value);\n              else\n                o[key] = value;\n            }\n            jQuery.each(orig, function(key, value) {\n              if (!is(value)) return true;\n              add(obj, key, build(value));\n            });\n          }\n          return obj;\n        }\n        this.keys = build(this.keys);\n        return this;\n      },\n      compact: function() {\n        return this.copy().COMPACT();\n      },\n      toString: function() {\n        var i = 0, queryString = [], chunks = [], self = this;\n        var encode = function(str) {\n          str = str + \"\";\n          if ($spaces) str = str.replace(/ /g, \"+\");\n          return encodeURIComponent(str);\n        };\n        var addFields = function(arr, key, value) {\n          if (!is(value) || value === false) return;\n          var o = [encode(key)];\n          if (value !== true) {\n            o.push(\"=\");\n            o.push(encode(value));\n          }\n          arr.push(o.join(\"\"));\n        };\n        var build = function(obj, base) {\n          var newKey = function(key) {\n            return !base || base == \"\" ? [key].join(\"\") : [base, \"[\", key, \"]\"].join(\"\");\n          };\n          jQuery.each(obj, function(key, value) {\n            if (typeof value == 'object') \n              build(value, newKey(key));\n            else\n              addFields(chunks, newKey(key), value);\n          });\n        };\n        \n        build(this.keys);\n        \n        if (chunks.length > 0) queryString.push($hash);\n        queryString.push(chunks.join($separator));\n        \n        return queryString.join(\"\");\n      }\n    };\n    \n    return new queryObject(location.search, location.hash);\n  };\n}(jQuery.query || {}); // Pass in jQuery.query as settings object"],"sourceRoot":"/source/"}